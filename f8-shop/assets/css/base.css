:root {
    --primary-color: #EE4D2D;
    --white-color: #fff;
    --black-color: #000;
    --text-color: #333;
    --border-color: #dbdbdb;

    --navbar-height: 46px;
    --header-height: 120px;
    --header-menu-height: 24px;
    --header-with-search-height: calc(var(--header-height) - var(--navbar-height) - var(--header-menu-height));
}

* {
    box-sizing: inherit;
}

html {
    /*Khi đặt css cho font size của html 100% => 16px*/
    /* 16px : 100px */
    font-size: 62.5%; /*tương ứng với 1 rem = 10px*/
    line-height: 1.6rem; /* 16px */
    font-family: 'Roboto', sans-serif;
    box-sizing: border-box;
}

.grid {
    width: 1200px;
    max-width: 100%;
    margin: 0 auto;
}

.grid__full-width {
    width: 100%;
}

.grid__row {
    display: flex;
    flex-wrap: wrap;
}

/*Modal*/
.modal {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
}

.modal__overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    animation: fadeIn linear 0.1s;
}

.modal__body {
    --growth-from: 0.7;
    --growth-to: 1;
    z-index: 1;
    margin: auto;
    animation: growth linear 0.1s;
}

/*Button style*/
.btn {
    min-width: 124px;
    height: 34px;
    text-decoration: none;
    border: none;
    border-radius: 2px;
    font-size: 1.5rem;
    outline: none;
    cursor: pointer;
    background-color: #fff;
    color: var(--text-color);
    padding: 0 12px;
    display: flex;
    justify-content: center;
    align-items: center;
    line-height: 1.6rem;

}

.btn.btn--normal:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

/*1 element có 2 class btn và btn--primary*/
.btn.btn--primary {
    background-color: var(--primary-color);
    color: var(--white-color);
}

.btn.btn--disabled {
    color: #949494;
    cursor: default;
    background-color: #c3c3c3;
}

/*Animation*/

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes growth {
    from {
        transform: scale(var(--growth-from));
    }

    to {
        transform: scale(var(--growth-to));
    }
}

